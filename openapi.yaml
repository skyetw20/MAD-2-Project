openapi: 3.0.0
info:
  title: Flask API Documentation
  version: 1.0.0
servers:
  - url: http://http://127.0.0.1:5000
tags:
  - name: shows
  - name: relation
  - name: theaters
  - name: login
  - name: logout
  - name: signup
  - name: account
  - name: bookings
  - name: addshow
  - name: addtheater
  - name: updateshow
  - name: updatetheater
  - name: deleteshow
  - name: deletetheater
  - name: exporttheater
  - name: test
paths:
  /shows:
    get:
      tags:
        - shows
      summary: Get all shows
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /relation:
    get:
      tags:
        - relation
      summary: Get relations between shows and theaters
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /theaters:
    get:
      tags:
        - theaters
      summary: Get all theaters
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /login:
    post:
      tags:
        - login
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "email": "user@example.com",
                    "password": "password"
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /logout:
    get:
      tags:
        - logout
      summary: User logout
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /signup:
    post:
      tags:
        - signup
      summary: User signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "name": "John Doe",
                    "email": "user@example.com",
                    "password": "password"
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /account:
    get:
      tags:
        - account
      summary: Get user account details
      parameters:
        - name: user_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /bookings:
    post:
      tags:
        - bookings
      summary: Add booking details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "show_id": 1,
                    "theater_id": 1,
                    "time": "18:00",
                    "date": "2023-08-05",
                    "num_seats": 2,
                    "total_price": 20,
                    "user_id": 1
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /addshow:
    post:
      tags:
        - addshow
      summary: Add show details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "email": "admin@example.com",
                    "name": "Show Name",
                    "duration": "2 hours",
                    "price": 15,
                    "rating": 4.5,
                    "tag": "Comedy",
                    "theaters": [1, 2]
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /addtheater:
    post:
      tags:
        - addtheater
      summary: Add theater details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "email": "admin@example.com",
                    "name": "Theater Name",
                    "place": "City",
                    "capacity": 100,
                    "rating": 4.0,
                    "capacity_booked": 0
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /updateshow:
    put:
      tags:
        - updateshow
      summary: Update show details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "email": "admin@example.com",
                    "show_id": 1,
                    "new_name": "New Show Name",
                    "new_duration": "2.5 hours",
                    "new_price": 18,
                    "new_rating": 4.7,
                    "new_tag": "Drama"
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /updatetheater:
    put:
      tags:
        - updatetheater
      summary: Update theater details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "email": "admin@example.com",
                    "theater_id": 1,
                    "new_name": "New Theater Name",
                    "new_place": "New City",
                    "new_capacity": 150,
                    "new_rating": 4.2,
                    "new_capacity_booked": 10
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /deleteshow:
    delete:
      tags:
        - deleteshow
      summary: Delete show
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: show_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /deletetheater:
    delete:
      tags:
        - deletetheater
      summary: Delete theater
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: theater_id
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <integer>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /exporttheater:
    post:
      tags:
        - exporttheater
      summary: Export theater details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                example: |
                  {
                    "theater_id": 1
                  }
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /test:
    get:
      tags:
        - test
      summary: Test the API
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
